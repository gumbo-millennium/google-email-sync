name: Run unit tests

on:
  pull_request:
  push:
    branches:
      - main
      - develop

jobs:
  test:
    name: "Test Laravel ${{ matrix.laravel }} on PHP ${{ matrix.php }}"
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental == true }}
    strategy:
      max-parallel: 12
      matrix:
        php:
          - '8.1'
          - '8.2'

        laravel:
          - '8.0'
          - '9.0'

        include:
          - laravel: '8.0'
            testbench: '6.0'

          - laravel: '9.0'
            testbench: '7.0'

          - php: '8.2'
            composer-options: --ignore-platform-req=php
            experimental: true

          - php: '8.1'
            laravel: '9.0'
            main: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: exif,json,mbstring,dom
          coverage: pcov

      - name: Configure Laravel ${{ matrix.laravel }} with Testbench ${{ matrix.testbench }}
        run: |
          composer require \
            illuminate/contracts:^${{ matrix.laravel }} \
            illuminate/database:^${{ matrix.laravel }} \
            illuminate/support:^${{ matrix.laravel }} \
            --no-update
          composer require --dev \
            orchestra/testbench:^${{ matrix.testbench }} \
            orchestra/canvas:^${{ matrix.testbench }} \
            --no-update

      - name: Install composer dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: "${{ matrix.composer-options }}"

      - name: Lint code
        run: composer exec -- parallel-lint config/ database/ src/ tests/

      - name: Run unit tests
        id: phpunit
        run: |
          COVERAGE_CLOVER="$( tempfile )"
          echo "::set-output name=clover::${COVERAGE_CLOVER}"
          composer exec -- phpunit --coverage-clover="$COVERAGE_CLOVER"

      - name: Determine coverage
        uses: slavcodev/coverage-monitor-action@1.1.0
        if: ${{ matrix.main == true && github.event_name == 'pull_request' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          clover_file: ${{ steps.phpunit.outputs.clover }}
          threshold_alert: 75
          threshold_warning: 95

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        if: ${{ matrix.main == true && github.ref == 'refs/heads/main' }}
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ${{ steps.phpunit.outputs.clover }}
          language: clover
